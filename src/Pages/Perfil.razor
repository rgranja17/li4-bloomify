@page "/perfilUtilizador"
@using Bloomify.Shared
@inject NavigationManager NavManager

@inject IUserService userService
@inject IOrderService orderService
@inject IProductService productService
@inject INotificationService notificationService
@inject AuthenticationStateProvider AuthProvider

@if (isLoading || tipo == null)
{
    return;
}
@if(!authenticated || tipo != "Cliente")
{
    <Error403 />
} 
else
{
<PageTitle>Perfil - Bloomify</PageTitle>

<div class="bg-white min-h-screen flex-col flex overflow-hidden">
    <NavBarUtilizador/>
    
    <div class="relative flex-auto flex items-center justify-center p-2 sm:p-4">

        <div class="absolute inset-0 w-full h-full overflow-hidden">
            <svg viewBox="0 0 1280 672" fill="none" xmlns="http://www.w3.org/2000/svg" 
                class="w-full h-full object-cover">
                <g filter="url(#filter0_f_32_4)">
                    <path d="M567.097 1641.67C1087.23 1781.04 1602.84 1543.37 1718.74 1110.82C1834.65 678.269 1506.95 214.636 986.815 75.2658C466.679 -64.1041 -48.9306 173.566 -164.832 606.118C-280.734 1038.67 46.962 1502.3 567.097 1641.67Z" fill="url(#paint0_linear_32_4)"/>
                </g>
                <defs>
                    <filter id="filter0_f_32_4" x="-223.138" y="0.393372" width="2000.19" height="1716.15" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                        <feFlood flood-opacity="0" result="BackgroundImageFix"/>
                        <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape"/>
                        <feGaussianBlur stdDeviation="25" result="effect1_foregroundBlur_32_4"/>
                    </filter>
                    <linearGradient id="paint0_linear_32_4" x1="777" y1="100" x2="777" y2="1000" gradientUnits="userSpaceOnUse">
                        <stop offset="0%" stop-color="#3F784C" stop-opacity="0"/>
                        <stop offset="50%" stop-color="#3F784C" stop-opacity="0.6"/>
                        <stop offset="100%" stop-color="#3F784C" stop-opacity="0.95"/>
                    </linearGradient>
                </defs>
            </svg>
        </div>

        <div class="w-full max-w-7xl mx-auto px-2 sm:px-4 lg:px-6">
            <div class="bg-white rounded-3xl shadow-2xl p-3 sm:p-4 md:p-6 [filter:drop-shadow(0px_0px_20px_rgba(0,0,0,0.30))]">

                <div class="flex flex-col sm:flex-row justify-between items-center mb-4 sm:mb-6">
                    <h1 class="text-3xl sm:text-4xl md:text-7xl font-black font-outfit text-custom_green">Ol√°, @primeiroNome!</h1>
                    <button class="text-custom_green mt-2 sm:mt-0 animate-bounce-slowest" @onclick="OpenPopup">
                        <img src="assets/Alarm.png" class="mb-8 h-8 w-8 sm:h-10 sm:w-10 md:h-14 md:w-14">
                    </button>
                </div>


                <div class="grid lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8">

                    <div class="relative p-3 sm:p-4 md:p-6 lg:col-span-1">
                        <div class="absolute inset-0 bg-gradient-to-b from-white via-custom_green to-white opacity-40 rounded-3xl [filter:drop-shadow(0px_0px_20px_rgba(0,0,0,0.70))] shadow-lg"></div>
                        <div class="relative z-10">
                            <h2 class="text-2xl sm:text-3xl md:text-4xl text-center font-outfit font-black text-profile_green mb-4 sm:mb-6">Os meus dados</h2>
                            <div class="space-y-3 sm:space-y-4">
                                <div class="flex items-center space-x-2 sm:space-x-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 sm:h-8 sm:w-8 md:h-10 md:w-10 text-custom_green" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                    </svg>
                                    <span class="text-xl font-medium font-outfit">@utilizador.Nome</span>
                                </div>
                                <div class="flex items-center space-x-2 sm:space-x-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 sm:h-8 sm:w-8 md:h-10 md:w-10 text-custom_green" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2" />
                                    </svg>
                                    <span class="text-xl font-medium font-outfit">@cliente.NIF</span>
                                </div>
                                <div class="flex items-center space-x-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-custom_green" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                    </svg>
                                    <span class="text-xl font-medium font-outfit">@utilizador.Email</span>
                                </div>
                                <div class="flex items-center space-x-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-custom_green" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                                    </svg>
                                    <span class="text-xl font-medium font-outfit">@utilizador.Telefone</span>
                                </div>
                                <div class="flex items-center space-x-3">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-custom_green" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                    </svg>
                                    <span class="text-xl font-medium font-outfit">@data</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="relative p-3 sm:p-4 md:p-6 lg:col-span-2">
                        <div class="absolute inset-0 bg-gradient-to-b from-white via-custom_purple to-white opacity-40 rounded-3xl [filter:drop-shadow(0px_0px_20px_rgba(0,0,0,0.70))] shadow-lg"></div>
                        <div class="relative z-10">
                            <h2 class="text-xl sm:text-2xl md:text-3xl font-black text-center font-outfit text-custom_purple mb-4 sm:mb-6">A minha atividade</h2>
                            
                            <div class="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4">

                                <div class="bg-white rounded-xl p-3 sm:p-4 flex items-center space-x-2 sm:space-x-4 [filter:drop-shadow(0px_4px_10px_rgba(0,0,0,0.25))]">
                                    <div class="p-2 rounded-lg">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-custom_purple" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" />
                                        </svg>
                                    </div>
                                    <div>
                                        <div class="text-2xl font-semibold">@n_produtos</div>
                                        <div class="text-sm sm:text-base text-gray-600">Produtos</div>
                                    </div>
                                </div>
                                <div class="bg-white rounded-xl p-3 sm:p-4 flex items-center space-x-4 [filter:drop-shadow(0px_4px_10px_rgba(0,0,0,0.25))]">
                                    <div class="p-2 rounded-lg">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-custom_purple" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
                                        </svg>
                                    </div>
                                    <div>
                                        <div class="text-2xl font-semibold">@n_encomendas</div>
                                        <div class="text-gray-600">Encomendas</div>
                                    </div>
                                </div>

                                <div class="bg-white rounded-xl p-3 sm:p-4 flex items-center space-x-4 [filter:drop-shadow(0px_4px_10px_rgba(0,0,0,0.25))]">
                                    <div class="p-2 rounded-lg">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-custom_purple" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                        </svg>
                                    </div>
                                    <div>
                                        <div class="text-2xl font-semibold">@gasto ‚Ç¨</div>
                                        <div class="text-gray-600">Gastos</div>
                                    </div>
                                </div>

                                <div class="bg-white rounded-xl p-3 sm:p-4 flex items-center space-x-4 [filter:drop-shadow(0px_4px_10px_rgba(0,0,0,0.25))]">
                                    <div class="p-2 rounded-lg">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-custom_purple" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                        </svg>
                                    </div>
                                    <div>
                                        <div class="text-xl font-semibold">@(favorito != null ? favorito : "...")</div>
                                        <div class="text-gray-600">Produto Fav.</div>
                                    </div>
                                </div>
                            </div>
                        
                            <div class="mt-6 text-center font-outfit font-bold text-gray-500">
                                Continue assim, @primeiroNome! Est√° a caminho de desbloquear um desconto especial!
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (showPopup)
{
    <div class="fixed inset-0 bg-gray-800 bg-opacity-70 flex items-center justify-center z-50 p-4">
        <!-- Fundo com blur -->
        <div class="absolute inset-0 bg-gray-800 bg-opacity-50 backdrop-blur-md"></div>

        <div class="bg-white rounded-2xl shadow-xl p-8 max-w-md w-full transition-all duration-300 ease-out transform scale-95 hover:scale-100 relative z-10">
            <!-- T√≠tulo e √≠cone -->
            <div class="flex items-center mb-6 space-x-3">
                <svg class="h-8 w-8 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01M21 12c0 4.418-3.582 8-8 8H11c-4.418 0-8-3.582-8-8 0-4.418 3.582-8 8-8h2c4.418 0 8 3.582 8 8z"/>
                </svg>
                <h3 class="text-2xl font-semibold text-gray-800">Notifica√ß√µes</h3>
            </div>

            <div class="space-y-4 text-gray-700">
                @if (notifications != null && notifications.Any())
                {
                    <ul class="space-y-3">
                        @foreach (var notificacao in notifications)
                        {
                            <li class="flex items-start bg-gray-50 hover:bg-gray-100 transition duration-200 ease-in-out rounded-lg p-4 shadow-md">
                                <svg class="h-6 w-6 text-green-500 mr-4 mt-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                </svg>
                                <div class="flex flex-col flex-grow">
                                    <span class="text-lg font-semibold text-gray-800">@notificacao.Titulo</span>
                                    <p class="text-sm text-gray-600 mt-1">@notificacao.Descricao</p>
                                </div>
                                <button class="ml-auto text-sm text-red-500 hover:text-red-700 flex items-center space-x-1" @onclick="() => MarkAsRead(notificacao)">
                                        <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="25" height="25" viewBox="0 0 30 30"
                                            style="fill:#FA5252;">
                                            <path d="M 13 3 A 1.0001 1.0001 0 0 0 11.986328 4 L 6 4 A 1.0001 1.0001 0 1 0 6 6 L 24 6 A 1.0001 1.0001 0 1 0 24 4 L 18.013672 4 A 1.0001 1.0001 0 0 0 17 3 L 13 3 z M 6 8 L 6 24 C 6 25.105 6.895 26 8 26 L 22 26 C 23.105 26 24 25.105 24 24 L 24 8 L 6 8 z"></path>
                                        </svg>
                                </button>

                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-gray-600 text-center text-lg">Nenhuma notifica√ß√£o encontrada.</p>
                }
            </div>

            <!-- Bot√£o de Fechar -->
            <div class="flex justify-center mt-6">
                <button class="bg-custom_green/95 text-white px-8 py-3 rounded-full shadow-lg hover:bg-custom_green transition-all duration-300 ease-in-out transform hover:scale-105" @onclick="ClosePopup">
                    Fechar
                </button>
            </div>
        </div>
    </div>
}
}

@code {
    private bool isLoading = true;
    private string tipo;
    private bool authenticated = false;
    private UserModel? utilizador = new();
    private ClientModel? cliente = new();
    private List<OrderModel?> orders = new();

    private List<NotificationModel> notifications = new();

    private bool showPopup = false;
    private bool notificacoes = false;

    private int n_encomendas = 0;
    private int n_produtos = 0;
    private int gasto = 0;
    private string favorito = null;

    private string primeiroNome = "";
    private string data = "";

    private void OpenPopup()
    {
        showPopup = true;
    }

    private void ClosePopup()
    {
        showPopup = false;
    }

    protected override async Task OnInitializedAsync()
    {
        var auth = (AuthProvider)AuthProvider;
        authenticated = await auth.IsAuthenticated();
        string? role = await auth.GetTipo();
        string? email = await auth.GetEmail();

        if (role != null)
        {
            tipo = role;
        }

        isLoading = false;

        if(authenticated)
        {
            if (email != null)
            {
                utilizador = await userService.GetUser(email);
                
                if (utilizador != null)
                {
                    cliente = await userService.GetCliente(utilizador.UserId);
                    notifications = await notificationService.GetUserNotifications(utilizador.UserId);

                    data = cliente.BirthDate.ToString("dd/MM/yyyy");

                    if (!string.IsNullOrWhiteSpace(utilizador.Nome))
                    {
                        primeiroNome = ParseNome(utilizador.Nome);
                    }

                    orders = await orderService.GetOrdersByClient(cliente.NIF);
                    n_encomendas = orders.Count;

                    int totalDeluxe = 0;
                    int totalStandard = 0;

                    foreach (var o in orders)
                    {
                        gasto += await productService.GetTotalSpentByEncomenda(o.Id);
                        n_produtos += await productService.GetNProductsByEncomenda(o.Id);  

                        string produtoFavorito = await productService.GetFavoriteProductByOrder(o.Id);  
                        if (produtoFavorito == "Vaso Deluxe")
                        {
                            totalDeluxe++;
                        }
                        else if (produtoFavorito == "Vaso Standard")
                        {
                            totalStandard++;
                        }
                    }
                    if(totalDeluxe > 0 || totalStandard > 0)
                    {    
                        favorito = totalDeluxe > totalStandard ? "Deluxe" : "Standard";
                    }
                }
            }
        }
    }

    private string ParseNome(string nome)
    {
        string[] partesNome = nome.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        return partesNome.Length > 0 ? partesNome[0] : "Utilizador";
    }

    private void MarkAsRead(NotificationModel notificacao)
    {
        // Remover a notifica√ß√£o da lista
        notifications.Remove(notificacao);

        // remover da bd
    }
}